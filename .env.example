# ======================================================================
# Bluesky Bot Configuration
# ======================================================================
#
# This file configures the Bluesky commit poster bot.
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to `.env` in your repository root
# 2. Fill in your Bluesky credentials (BSKY_HANDLE and BSKY_APP_PASSWORD)
# 3. Run validation: deno task validate --test-auth
# 4. Test with dry-run: deno task test
#
# ======================================================================

# ───────────────────────────────────────────────────────────────────────
# REQUIRED: Bluesky Credentials
# ───────────────────────────────────────────────────────────────────────

# Your Bluesky handle or DID
# Format: yourname.bsky.social (or did:plc:xxxxx for DIDs)
# Example: alice.bsky.social
BSKY_HANDLE=

# Bluesky app password (NOT your account password!)
# Generate one at: https://account.bsky.app/settings/app-passwords
# Format: xxxx-xxxx-xxxx-xxxx (app passwords are separate from login)
# IMPORTANT: Use app password, not your main account password
BSKY_APP_PASSWORD=

# ───────────────────────────────────────────────────────────────────────
# OPTIONAL: Service Configuration
# ───────────────────────────────────────────────────────────────────────

# AT Protocol service URL
# Default: https://bsky.social (Bluesky's main service)
# Only change if using a custom AT Protocol service
# BLUESKY_SERVICE=https://bsky.social

# ───────────────────────────────────────────────────────────────────────
# OPTIONAL: Testing and Development
# ───────────────────────────────────────────────────────────────────────

# Dry run mode - preview posts without actually publishing
# Set to "on" to test the bot without posting to Bluesky
# Useful for: testing setup, debugging, previewing post content
# Default: off
# BLUESKY_DRYRUN=on

# ───────────────────────────────────────────────────────────────────────
# OPTIONAL: AI-Powered Summarization (OpenAI)
# ───────────────────────────────────────────────────────────────────────

# Enable/disable AI summarization of commit messages
# If enabled, uses OpenAI to condense commit messages into social-friendly posts
# Requires OPENAI_API_KEY to be set
# Default: on (if OPENAI_API_KEY is present)
# AI_SUMMARY=on

# OpenAI API key for AI-powered commit message summarization
# Get your key at: https://platform.openai.com/api-keys
# Format: sk-proj-xxxxx or sk-xxxxx
# If not set, bot will use commit message as-is (no AI processing)
# OPENAI_API_KEY=sk-proj-your-key-here

# ───────────────────────────────────────────────────────────────────────
# HOW THE BOT WORKS
# ───────────────────────────────────────────────────────────────────────
#
# The bot posts commits to Bluesky when EITHER condition is met:
#
# 1. Commit message contains a semantic version:
#    - Examples: v1.0.0, 2.1.3-beta.1, 3.0.0-rc.1
#    - git commit -m "Release v1.0.0"
#
# 2. Commit message contains @publish keyword:
#    - Example: git commit -m "Important update @publish"
#
# Posts are deduplicated locally (won't post the same commit twice)
#
# ───────────────────────────────────────────────────────────────────────
# VALIDATION AND TESTING
# ───────────────────────────────────────────────────────────────────────
#
# After configuration, test your setup:
#
# 1. Validate credentials (without posting):
#    deno task validate --test-auth
#
# 2. Preview what would be posted (dry-run):
#    deno task test
#
# 3. Make a test commit:
#    git commit --allow-empty -m "Test v1.0.0 @publish"
#    git push  # This will post to Bluesky if hook is installed
#
# ───────────────────────────────────────────────────────────────────────
